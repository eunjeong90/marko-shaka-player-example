import "shaka-player/dist/controls.css";
import shaka from "shaka-player";
<!-- // export interface ShakaPlayer {} -->

<div>
    <video
        id="video"
        width="640"
        poster="//shaka-player-demo.appspot.com/assets/poster.jpg"
        controls
        autoplay
    />
</div>
class {
    onMount() {
        this.initApp();
    }
    async initPlayer(manifestUri: string) {
        // Create a Player instance.
        const video = document.getElementById("video");
        //@ts-ignore
        const player = new shaka.Player(video);

        // Attach player to the window to make it easy to access in the JS console.
        //@ts-ignore
        window.player = player;

        // Listen for error events.
        // player.addEventListener("error", onErrorEvent);

        // Try to load a manifest.
        // This is an asynchronous process.
        console.log("initplayer");
        try {
            await player.load(manifestUri);
            // This runs if the asynchronous load is successful.
            console.log("The video has now been loaded!");
        } catch (e) {
            // onError is executed if the asynchronous load fails.
            this.onError(e);
        }
    }
    initApp() {
        const manifestUri =
            "https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd";
        // Install built-in polyfills to patch browser incompatibilities.
        shaka.polyfill.installAll();

        // Check to see if the browser supports the basic APIs Shaka needs.
        if (shaka.Player.isBrowserSupported()) {
            // Everything looks good!
            this.initPlayer(manifestUri);
        } else {
            // This browser does not have the minimum set of APIs we need.
            console.error("Browser not supported!");
        }
    }
    onError(error: any) {
        // Log the error.
        console.error("Error code", error.code, "object", error);
    }
}
